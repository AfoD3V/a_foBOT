name: Deploy

on:
  pull_request:
    branches: [ "main" ] 
  workflow_dispatch:
    inputs:
      input:
        description: "Test"
        required: false
        default: "World"
        
permissions:
  contents: read

jobs:
  docker_image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - name: Install poetry dependencies
        run: poetry install
      - name: Get timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +%s)"
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag afod3v/afobot:${{ steps.timestamp.outputs.timestamp }}
      - name: Login into DockerHub
        run: echo "${{secrets.DOCKER_PASSWORD}}" | docker login -u ${{secrets.DOCKER_USER}} --password-stdin
      - name: Push into DockerHub
        run: docker push afod3v/afobot:${{ steps.timestamp.outputs.timestamp }}
      

  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pipx install poetry
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'poetry'
      - name: Install poetry dependencies
        run: poetry install
      - name: Test with pytest
        run: poetry run pytest -v 
      - name: Initialize config.ini
        run: python config_init.py
      - name: Use Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY }}
